image: gitlab.codixfr.private:5005/enterpriseapps/images/docker:1.4

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  - export IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#  - export IMAGE_TAG=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-ci jwt=$CI_JOB_JWT)"
  - export BRANCH=${BRANCH}
  - cp .env.$CI_ENVIRONMENT_NAME .env
  - |
    vault kv get -format=json kv/oci-api | jq '.["data"]["data"]' > data.json
    jq 'del(.private_key_content)' data.json > config.json
    key=$(jq '.private_key_content' data.json)
    echo -e $key | tr -d '"' | sed '${/^$/d}' > private_key.pem
    rm data.json

.deploy-script: &deploy-script
  # In order to fix bug with doker version
  - export DOCKER_API_VERSION=1.39

  # Set docker host to deploy host so we can deploy remotely
  - export DOCKER_HOST=$DEPLOY_HOST

  # Deploy new image
  - docker-compose up --build --detach --force-recreate
  - docker --host $DEPLOY_HOST cp config.json oci-api-$CI_ENVIRONMENT_NAME-go-1:/go/
  - docker --host $DEPLOY_HOST cp private_key.pem oci-api-$CI_ENVIRONMENT_NAME-go-1:/go/

  # Register new deploy in proxy
  - export SERVER=$(echo $DEPLOY_HOST | sed "s/http:\/\///g" | sed "s/:[0-9]*//g")
  - . .env && export PORT=${API_PORT}
  # - export PORT=$(docker-compose --host $DEPLOY_HOST port go 4000 | sed "s/.*://g")
  - |
    curl \
    --request POST $WEB_PROXY_URL \
    --header "Content-Type: application/json" \
    --header "Authorization: Bearer $WEB_PROXY_TOKEN" \
    --insecure \
    --data-raw '{"path": "oci-api/", "servers": [ "'$SERVER:$PORT'" ] }'

stages:
  - deploy

deploy on dev:
  stage: deploy
  environment: dev
  script:
    - export WEB_PROXY_URL=$WEB_PROXY_URL_DEV
    - export WEB_PROXY_TOKEN=$WEB_PROXY_TOKEN_DEV
    - *deploy-script
  only:
    - develop

deploy on prod:
  stage: deploy
  environment: prod
  script:
    - echo $CI_ENVIRONMENT_NAME
    - export WEB_PROXY_URL=$WEB_PROXY_URL_PROD
    - export WEB_PROXY_TOKEN=$WEB_PROXY_TOKEN_PROD
    - *deploy-script
  only:
    - tags
  when: manual

